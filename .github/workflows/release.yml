---
name: Release
permissions:
  contents: write
on:
  push:
    tags:
      - v*  # Only run on version tags like v1.2.3
  workflow_dispatch:  # Allow manual triggering if needed
jobs:
   build:
     name: Build binaries
     runs-on: ${{ matrix.os }}
     strategy:
       matrix:
         os: [ubuntu-latest, macos-latest]
     steps:
       - uses: actions/checkout@v4
       - name: Set up Rust
         uses: actions-rs/toolchain@v1
         with:
           toolchain: stable
           profile: minimal

       # For macOS, build both architectures
       - name: Add Rust targets (macOS only)
         if: matrix.os == 'macos-latest'
         run: |
           rustup target add x86_64-apple-darwin
           rustup target add aarch64-apple-darwin

       - name: Build x86_64 (macOS only)
         if: matrix.os == 'macos-latest'
         run: cargo build --release --target x86_64-apple-darwin

       - name: Build arm64 (macOS only)
         if: matrix.os == 'macos-latest'
         run: cargo build --release --target aarch64-apple-darwin

       - name: Rename binaries (macOS only)
         if: matrix.os == 'macos-latest'
         run: |
           mv target/x86_64-apple-darwin/release/wave wave-macos-x86_64
           mv target/aarch64-apple-darwin/release/wave wave-macos-arm64

       - name: Upload x86_64 binary (macOS only)
         if: matrix.os == 'macos-latest'
         uses: actions/upload-artifact@v4
         with:
           name: wave-macos-x86_64
           path: wave-macos-x86_64

       - name: Upload arm64 binary (macOS only)
         if: matrix.os == 'macos-latest'
         uses: actions/upload-artifact@v4
         with:
           name: wave-macos-arm64
           path: wave-macos-arm64

       # For Ubuntu, build and upload as linux-x86_64
       - name: Build release binary (Linux only)
         if: matrix.os == 'ubuntu-latest'
         run: cargo build --release

       - name: Rename binary for platform (Linux only)
         if: matrix.os == 'ubuntu-latest'
         run: mv target/release/wave wave-linux-x86_64

       - name: Upload binary artifact (Linux only)
         if: matrix.os == 'ubuntu-latest'
         uses: actions/upload-artifact@v4
         with:
           name: wave-linux-x86_64
           path: wave-linux-x86_64
   release:
     name: Create GitHub Release
     needs: build
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v4
       - name: Download Linux binary
         uses: actions/download-artifact@v4
         with:
           name: wave-linux-x86_64
           path: ./artifacts
       - name: Download macOS x86_64 binary
         uses: actions/download-artifact@v4
         with:
           name: wave-macos-x86_64
           path: ./artifacts
       - name: Download macOS arm64 binary
         uses: actions/download-artifact@v4
         with:
           name: wave-macos-arm64
           path: ./artifacts

       # Create GitHub Release and upload binaries
       - name: Create Release
         uses: softprops/action-gh-release@v2
         with:
           files: |
             ./artifacts/wave-linux-x86_64
             ./artifacts/wave-macos-x86_64
             ./artifacts/wave-macos-arm64
           generate_release_notes: true
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 